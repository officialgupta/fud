#fb-root
:javascript
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v2.4";
    fjs.parentNode.insertBefore(js, fjs);
    document.getElementsByClassName("pluginShareButtonLink").className = "";
  }(document, 'script', 'facebook-jssdk'));

%div.user1
  %img.avatar{:src => @user.avatar_url}
  %h2.name=@user.full_name
  %div.info1
    %div.row
      %a.no-dec#facebook_share{:href => "https://www.facebook.com/sharer/sharer.php?u=fudyrs.me/profile/#{request.original_url}"}
        %i.share-icon-exep.fa.fa-facebook
      %a.no-dec.share-link{:href => "https://twitter.com/intent/tweet?original_referer=#{request.original_url};ref_src=twsrc%5Etfw&amp;text=F%C3%BCd%20is%20g%C3%BCd.%20Check%20it%20out%20now!&amp;tw_p=tweetbutton&amp;url=http%3A%2F%2Ffudyrs.me%2F"}
        %i.share-icon.fa.fa-twitter
      %a.no-dec.share-link{:href => "https://plus.google.com/share?url=#{request.original_url}"}
        %i.share-icon.fa.fa-google-plus
      %a.no-dec.share-link.pin-it-button{"count-layout" => "horizontal", :href => "http://pinterest.com/pin/create/button/?url=#{request.original_url}&media=http://ontv.uk.com/wp-content/uploads/2015/06/Good-Food-Guide-editor-calls-for-more-veggie-options-on-pub-menus.jpg"}
        %i.share-icon.fa.fa-pinterest
    - if user_signed_in?
      %div.row
        = link_to "Edit my details", edit_user_registration_path
  %div.profile
    %div.stats
      %canvas#chart-area{:height => "400", :width => "400"}
    %div.leaderboard
      %div.content

  %script
    var doughnutData = [
    {
    value: #{@user.items.in_use.count},
    color: "#4D5360",
    highlight: "#616774",
    label: "In use"
    },
    {
    value: #{@user.items.disposed.count},
    color: "#dd3322",
    highlight: "#F74D3C",
    label: "Disposed"
    },
    {
    value: #{@user.items.used.count},
    color: "#ffaa22",
    highlight: "#FFC43C",
    label: "Used"
    },
    {
    value: #{@user.items.donating.count},
    color: "#235000",
    highlight: "#568333",
    label: "Donating"
    },
    {
    value: #{@user.items.donated.count},
    color:"#78a425",
    highlight: "#92BE3F",
    label: "Donated"
    }
    ];
    $(document).ready (function(){
    var ctx = document.getElementById("chart-area").getContext("2d");
    window.myDoughnut = new Chart(ctx).Doughnut(doughnutData, {responsive : true});
    });

-content_for :head do
  %script
    (function ($) {
    var FakePoller = function(options, callback){
    var defaults = {
    frequency: 60,
    limit: 10
    };
    this.callback = callback;
    this.config = $.extend(defaults, options);
    this.list = #{@users};
    }
    FakePoller.prototype.getData = function() {
    var results = [];
    for (var i = 0, len = this.list.length; i < len; i++) {
    results.push({
    name: this.list[i],
    count: httpGet("/points/" + this.list[i])
    });
    }
    return results;
    };

    function httpGet(theUrl)
    {
    var xmlHttp = new XMLHttpRequest();
    xmlHttp.open( "GET", theUrl, false );
    xmlHttp.send( null );
    return xmlHttp.responseText;
    }

    FakePoller.prototype.processData = function() {
    return this.sortData(this.getData()).slice(0, this.config.limit);
    };

    FakePoller.prototype.sortData = function(data) {
    return data.sort(function(a, b) {
    return b.count - a.count;
    });
    };
    FakePoller.prototype.start = function() {
    var _this = this;
    this.interval = setInterval((function() {
    _this.callback(_this.processData());
    }), this.config.frequency * 1000);
    this.callback(this.processData());
    return this;
    };
    FakePoller.prototype.stop = function() {
    clearInterval(this.interval);
    return this;
    };
    window.FakePoller = FakePoller;

    var Leaderboard = function (elemId, options) {
    var _this = this;
    var defaults = {
    limit:10,
    frequency:15
    };
    this.currentItem = 0;
    this.currentCount = 0;
    this.config = $.extend(defaults,options);

    this.$elem = $(elemId);
    if (!this.$elem.length)
    this.$elem = $('<div>').appendTo($('body'));

    this.list = [];
    this.$content = $('<ul>');
    this.$elem.append(this.$content);

    this.poller = new FakePoller({frequency: this.config.frequency, limit: this.config.limit}, function (data) {
    if (data) {
    if(_this.currentCount != data.length){
    _this.buildElements(_this.$content,data.length);
    }
    _this.currentCount = data.length;
    _this.data = data;
    _this.list[0].$item.addClass('animate');
    }
    });

    this.poller.start();
    };

    Leaderboard.prototype.buildElements = function($ul,elemSize){
    var _this = this;
    $ul.empty();
    this.list = [];

    for (var i = 0; i < elemSize; i++) {
    var item = $('<li>').on("animationend webkitAnimationEnd oAnimationEnd",eventAnimationEnd.bind(this) ).appendTo($ul);
    this.list.push({
    $item: item,
    $name: $('<span class="name">Loading...</span>').appendTo(item),
    $count: $('<span class="count">Loading...</span>').appendTo(item)
    });
    }

    function eventAnimationEnd (evt){
    this.list[this.currentItem].$name.text(_this.data[this.currentItem].name);
    this.list[this.currentItem].$count.text(_this.data[this.currentItem].count);
    this.list[this.currentItem].$item.removeClass('animate');
    this.currentItem = this.currentItem >= this.currentCount - 1 ? 0 : this.currentItem + 1;
    if (this.currentItem != 0) {
    this.list[this.currentItem].$item.addClass('animate');
    }
    }
    };

    Function.prototype.bind = function(){
    var fn = this, args = Array.prototype.slice.call(arguments),
    object = args.shift();
    return function(){
    return fn.apply(object,args.concat(Array.prototype.slice.call(arguments)));
    };
    };

    window.Leaderboard = Leaderboard;
    //Helper
    function rnd (min,max){
    min = min || 100;
    if (!max){
    max = min;
    min = 1;
    }
    return	Math.floor(Math.random() * (max-min+1) + min);
    }

    function numberFormat(num) {
    return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }
    })(jQuery);

    $(document).ready(function () {
    var myLeaderboard = new Leaderboard(".content", {limit:8,frequency:8});
    });
